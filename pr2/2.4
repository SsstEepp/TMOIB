{"cells":[{"cell_type":"markdown","metadata":{"_cell_guid":"33ffe59a-78f7-f5b5-4671-b5ca53026e24","id":"qZWoZBE2_89k"},"source":["Goal of this notebook to test several classifiers on the data set with different features"]},{"cell_type":"code","execution_count":2,"metadata":{"_cell_guid":"e6094c6e-9777-c7be-bd57-fe431519ad20","tags":[],"id":"R_S_5UEg_89p","executionInfo":{"status":"ok","timestamp":1743521760803,"user_tz":-180,"elapsed":5732,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib as mpl\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import string\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","from sklearn.model_selection import train_test_split\n","from nltk.stem import SnowballStemmer\n","from nltk.corpus import stopwords\n","\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.svm import SVC\n","from sklearn.naive_bayes import MultinomialNB\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.ensemble import AdaBoostClassifier\n","from sklearn.ensemble import BaggingClassifier\n","from sklearn.ensemble import ExtraTreesClassifier\n","from sklearn.metrics import accuracy_score\n","\n","%matplotlib inline"]},{"cell_type":"code","source":["import nltk\n","nltk.download('stopwords')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RBUJGeVKBzVf","executionInfo":{"status":"ok","timestamp":1743522319738,"user_tz":-180,"elapsed":318,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}},"outputId":"4215f9f8-4eb1-4fea-bd6f-391d2b158f94"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/stopwords.zip.\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","metadata":{"_cell_guid":"6689da0a-5795-85f6-2f13-4eb276bde97f","id":"lV6AEwJ2_89s"},"source":["Let's read the data from csv file"]},{"cell_type":"code","execution_count":3,"metadata":{"_cell_guid":"94a28c87-ff0a-8302-05bd-404df2873761","tags":[],"id":"xdr9lm7d_89s","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1743521781234,"user_tz":-180,"elapsed":392,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}},"outputId":"dabf2ba1-c695-479f-dc9e-0b45c7d4ea74"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["     v1                                                 v2 Unnamed: 2  \\\n","0   ham  Go until jurong point, crazy.. Available only ...        NaN   \n","1   ham                      Ok lar... Joking wif u oni...        NaN   \n","2  spam  Free entry in 2 a wkly comp to win FA Cup fina...        NaN   \n","3   ham  U dun say so early hor... U c already then say...        NaN   \n","4   ham  Nah I don't think he goes to usf, he lives aro...        NaN   \n","\n","  Unnamed: 3 Unnamed: 4  \n","0        NaN        NaN  \n","1        NaN        NaN  \n","2        NaN        NaN  \n","3        NaN        NaN  \n","4        NaN        NaN  "],"text/html":["\n","  <div id=\"df-38a7f074-22eb-4bd9-b84a-e3f046247dbd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>v1</th>\n","      <th>v2</th>\n","      <th>Unnamed: 2</th>\n","      <th>Unnamed: 3</th>\n","      <th>Unnamed: 4</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ham</td>\n","      <td>Go until jurong point, crazy.. Available only ...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ham</td>\n","      <td>Ok lar... Joking wif u oni...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>spam</td>\n","      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ham</td>\n","      <td>U dun say so early hor... U c already then say...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>ham</td>\n","      <td>Nah I don't think he goes to usf, he lives aro...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-38a7f074-22eb-4bd9-b84a-e3f046247dbd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-38a7f074-22eb-4bd9-b84a-e3f046247dbd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-38a7f074-22eb-4bd9-b84a-e3f046247dbd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9c4d04c3-d2fb-44f4-ba75-d0120505dab2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9c4d04c3-d2fb-44f4-ba75-d0120505dab2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9c4d04c3-d2fb-44f4-ba75-d0120505dab2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"sms","summary":"{\n  \"name\": \"sms\",\n  \"rows\": 5572,\n  \"fields\": [\n    {\n      \"column\": \"v1\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"spam\",\n          \"ham\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"v2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5169,\n        \"samples\": [\n          \"Did u download the fring app?\",\n          \"Pass dis to all ur contacts n see wat u get! Red;i'm in luv wid u. Blue;u put a smile on my face. Purple;u r realy hot. Pink;u r so swt. Orange;i thnk i lyk u. Green;i realy wana go out wid u. Yelow;i wnt u bck. Black;i'm jealous of u. Brown;i miss you Nw plz giv me one color\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 43,\n        \"samples\": [\n          \" GOD said\",\n          \" SHE SHUDVETOLD U. DID URGRAN KNOW?NEWAY\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \" \\\\\\\"OH No! COMPETITION\\\\\\\". Who knew\",\n          \" why to miss them\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 4\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"GNT:-)\\\"\",\n          \" one day these two will become FREINDS FOREVER!\\\"\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}],"source":["sms = pd.read_csv('/content/drive/MyDrive/TMOIC/prz2/04-SMS-spam-detection-with-various-classifiers/spam.csv', encoding='latin-1')\n","sms.head()"]},{"cell_type":"markdown","metadata":{"_cell_guid":"dc912e7b-d1b9-7937-ebeb-5310b67017b1","id":"bpACvYYL_89t"},"source":["Now drop \"unnamed\" columns and rename v1 and v2 to \"label\" and \"message\""]},{"cell_type":"code","execution_count":4,"metadata":{"_cell_guid":"85bb6f9f-77db-6352-e53e-79bc29112304","tags":[],"id":"Q1PpnfC7_89t","executionInfo":{"status":"ok","timestamp":1743521791653,"user_tz":-180,"elapsed":3,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}}},"outputs":[],"source":["sms = sms.drop(['Unnamed: 2','Unnamed: 3','Unnamed: 4'],axis=1)\n","sms = sms.rename(columns = {'v1':'label','v2':'message'})"]},{"cell_type":"markdown","metadata":{"_cell_guid":"e2fa50fd-b634-c505-c6a5-ec2155e32d2e","id":"aVCmGcQm_89u"},"source":["Let's look into our data"]},{"cell_type":"code","execution_count":5,"metadata":{"_cell_guid":"0ad05287-4fa7-835a-2a58-ef273065875f","tags":[],"id":"J5MEvg5Y_89u","colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"status":"ok","timestamp":1743521794303,"user_tz":-180,"elapsed":71,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}},"outputId":"d5ec4298-22b9-44d9-a866-7a7302ae6d66"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      message                                                               \n","        count unique                                                top freq\n","label                                                                       \n","ham      4825   4516                             Sorry, I'll call later   30\n","spam      747    653  Please call our customer service representativ...    4"],"text/html":["\n","  <div id=\"df-b15a30e1-fe50-4343-a79e-c06f5e6297be\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","\n","    .dataframe thead tr:last-of-type th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th></th>\n","      <th colspan=\"4\" halign=\"left\">message</th>\n","    </tr>\n","    <tr>\n","      <th></th>\n","      <th>count</th>\n","      <th>unique</th>\n","      <th>top</th>\n","      <th>freq</th>\n","    </tr>\n","    <tr>\n","      <th>label</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>ham</th>\n","      <td>4825</td>\n","      <td>4516</td>\n","      <td>Sorry, I'll call later</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>spam</th>\n","      <td>747</td>\n","      <td>653</td>\n","      <td>Please call our customer service representativ...</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b15a30e1-fe50-4343-a79e-c06f5e6297be')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b15a30e1-fe50-4343-a79e-c06f5e6297be button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b15a30e1-fe50-4343-a79e-c06f5e6297be');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-45840020-3fe0-4a46-a74d-aa5936a1db2b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-45840020-3fe0-4a46-a74d-aa5936a1db2b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-45840020-3fe0-4a46-a74d-aa5936a1db2b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"sms\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": [\n        \"label\",\n        \"\"\n      ],\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"spam\",\n          \"ham\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"message\",\n        \"count\"\n      ],\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"747\",\n        \"max\": \"4825\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"747\",\n          \"4825\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"message\",\n        \"unique\"\n      ],\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 653,\n        \"max\": 4516,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          653,\n          4516\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"message\",\n        \"top\"\n      ],\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Please call our customer service representative on FREEPHONE 0808 145 4742 between 9am-11pm as you have WON a guaranteed \\u00e5\\u00a31000 cash or \\u00e5\\u00a35000 prize!\",\n          \"Sorry, I'll call later\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"message\",\n        \"freq\"\n      ],\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"4\",\n        \"max\": \"30\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"4\",\n          \"30\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}],"source":["sms.groupby('label').describe()"]},{"cell_type":"markdown","metadata":{"_cell_guid":"053b2b31-e65f-5514-5f07-a16b2c42f6c7","id":"Z3t9ZURK_89u"},"source":["Intresting that \"Sorry, I'll call later\" appears only 30 times here =)"]},{"cell_type":"markdown","metadata":{"_cell_guid":"d95f59db-4713-1f64-083c-fc8a25708234","id":"ZvJEkwtH_89u"},"source":["Now let's create new feature \"message length\" and plot it to see if it's of any interest"]},{"cell_type":"code","execution_count":6,"metadata":{"_cell_guid":"6abbc5cb-3451-8de5-c9cc-0d4a04dbea02","tags":[],"id":"hZxuFzgK_89v","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1743521900036,"user_tz":-180,"elapsed":31,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}},"outputId":"30af4e64-c8e0-4720-c598-710b381ae2fc"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["  label                                            message  length\n","0   ham  Go until jurong point, crazy.. Available only ...     111\n","1   ham                      Ok lar... Joking wif u oni...      29\n","2  spam  Free entry in 2 a wkly comp to win FA Cup fina...     155\n","3   ham  U dun say so early hor... U c already then say...      49\n","4   ham  Nah I don't think he goes to usf, he lives aro...      61"],"text/html":["\n","  <div id=\"df-afd2acfb-da28-4561-87a6-38ba75a46292\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>message</th>\n","      <th>length</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ham</td>\n","      <td>Go until jurong point, crazy.. Available only ...</td>\n","      <td>111</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ham</td>\n","      <td>Ok lar... Joking wif u oni...</td>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>spam</td>\n","      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n","      <td>155</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ham</td>\n","      <td>U dun say so early hor... U c already then say...</td>\n","      <td>49</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>ham</td>\n","      <td>Nah I don't think he goes to usf, he lives aro...</td>\n","      <td>61</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-afd2acfb-da28-4561-87a6-38ba75a46292')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-afd2acfb-da28-4561-87a6-38ba75a46292 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-afd2acfb-da28-4561-87a6-38ba75a46292');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-088c0628-08f9-495f-9207-a60ebb9ac38b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-088c0628-08f9-495f-9207-a60ebb9ac38b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-088c0628-08f9-495f-9207-a60ebb9ac38b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"sms","summary":"{\n  \"name\": \"sms\",\n  \"rows\": 5572,\n  \"fields\": [\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"spam\",\n          \"ham\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"message\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5169,\n        \"samples\": [\n          \"Did u download the fring app?\",\n          \"Pass dis to all ur contacts n see wat u get! Red;i'm in luv wid u. Blue;u put a smile on my face. Purple;u r realy hot. Pink;u r so swt. Orange;i thnk i lyk u. Green;i realy wana go out wid u. Yelow;i wnt u bck. Black;i'm jealous of u. Brown;i miss you Nw plz giv me one color\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 59,\n        \"min\": 2,\n        \"max\": 910,\n        \"num_unique_values\": 274,\n        \"samples\": [\n          84,\n          177\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}],"source":["sms['length'] = sms['message'].apply(len)\n","sms.head()"]},{"cell_type":"code","execution_count":11,"metadata":{"_cell_guid":"4533b9ae-fea2-d346-321b-f73bd12d677d","tags":[],"id":"zPm_x4OA_89v","colab":{"base_uri":"https://localhost:8080/","height":506},"executionInfo":{"status":"ok","timestamp":1743522120934,"user_tz":-180,"elapsed":1760,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}},"outputId":"1be2bcef-4fe4-4d5e-8026-d6abdda618f4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([<Axes: title={'center': 'ham'}>, <Axes: title={'center': 'spam'}>],\n","      dtype=object)"]},"metadata":{},"execution_count":11},{"output_type":"display_data","data":{"text/plain":["<Figure size 1100x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["mpl.rcParams['patch.force_edgecolor'] = True\n","plt.style.use('ggplot')\n","sms.hist(column='length', by='label', bins=50,figsize=(11,5))"]},{"cell_type":"markdown","metadata":{"_cell_guid":"0e5e7b86-5ad3-3a83-65a9-016bdb745904","id":"Vz59-Zvj_89v"},"source":["Looks like the lengthy is the message, more likely it is a spam. Let's not forget this"]},{"cell_type":"markdown","metadata":{"_cell_guid":"2ae25190-c9b7-101b-6042-e8f9cf382e46","id":"IZ-Fi146_89v"},"source":["### Text processing and vectorizing our meddages"]},{"cell_type":"markdown","metadata":{"_cell_guid":"1e8ef576-3a86-7824-474d-d21e7dcba1f9","id":"TGvCSAX-_89v"},"source":["Let's create new data frame. We'll need a copy later on"]},{"cell_type":"code","execution_count":12,"metadata":{"_cell_guid":"1db101ba-5949-0c9c-6581-7b7d5e51de80","tags":[],"id":"YSjuBuS2_89v","executionInfo":{"status":"ok","timestamp":1743522133500,"user_tz":-180,"elapsed":42,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}}},"outputs":[],"source":["text_feat = sms['message'].copy()"]},{"cell_type":"markdown","metadata":{"_cell_guid":"bd1d6d0c-39e2-65fb-1795-9c75bf51f29e","id":"JLiHc3F0_89w"},"source":["Now define our tex precessing function. It will remove any punctuation and stopwords aswell."]},{"cell_type":"code","execution_count":13,"metadata":{"_cell_guid":"078389bf-00ec-13f4-78cd-f6ea818ff6f4","tags":[],"id":"Gtp4K8PQ_89w","executionInfo":{"status":"ok","timestamp":1743522134699,"user_tz":-180,"elapsed":3,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}}},"outputs":[],"source":["def text_process(text):\n","\n","    text = text.translate(str.maketrans('', '', string.punctuation))\n","    text = [word for word in text.split() if word.lower() not in stopwords.words('english')]\n","\n","    return \" \".join(text)"]},{"cell_type":"code","execution_count":16,"metadata":{"_cell_guid":"79b2e2b0-008d-b648-1031-f94c848a3064","tags":[],"id":"SiSDXXHz_89w","executionInfo":{"status":"ok","timestamp":1743522332094,"user_tz":-180,"elapsed":7313,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}}},"outputs":[],"source":["text_feat = text_feat.apply(text_process)"]},{"cell_type":"code","execution_count":17,"metadata":{"_cell_guid":"d6dce35d-b2b3-cfb5-42b1-a95aeac177a1","tags":[],"id":"eXRmsEdY_89w","executionInfo":{"status":"ok","timestamp":1743522341297,"user_tz":-180,"elapsed":41,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}}},"outputs":[],"source":["vectorizer = TfidfVectorizer()"]},{"cell_type":"code","execution_count":18,"metadata":{"_cell_guid":"d9d11f55-f800-dd25-f001-dcc3c6a7fea4","tags":[],"id":"wtve8ay9_89w","executionInfo":{"status":"ok","timestamp":1743522342661,"user_tz":-180,"elapsed":99,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}}},"outputs":[],"source":["features = vectorizer.fit_transform(text_feat)"]},{"cell_type":"markdown","metadata":{"_cell_guid":"cfd14d8a-d700-ee85-f744-9d4562dd9fb0","id":"R-c7814O_89w"},"source":["###  Classifiers and predictions"]},{"cell_type":"markdown","metadata":{"_cell_guid":"08f8dcd4-2161-e373-2fc4-e9ecc631810d","id":"OIGxpZVF_89w"},"source":["First of all let's split our features to test and train set"]},{"cell_type":"code","execution_count":19,"metadata":{"_cell_guid":"346766bb-d722-dca1-71d0-fd0f0dafcbae","tags":[],"id":"OA6dDyga_89w","executionInfo":{"status":"ok","timestamp":1743522343810,"user_tz":-180,"elapsed":7,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}}},"outputs":[],"source":["features_train, features_test, labels_train, labels_test = train_test_split(features, sms['label'], test_size=0.3, random_state=111)"]},{"cell_type":"markdown","metadata":{"_cell_guid":"1eaef9ae-d68a-4001-8adb-0e2d031be876","id":"vJiKXu4m_89w"},"source":["Now let's import bunch of classifiers, initialize them and make a dictionary to itereate through"]},{"cell_type":"code","execution_count":20,"metadata":{"_cell_guid":"6e889ffa-59d8-377c-867d-25c67888765f","tags":[],"id":"IBtBhjNE_89x","executionInfo":{"status":"ok","timestamp":1743522345832,"user_tz":-180,"elapsed":3,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}}},"outputs":[],"source":["svc = SVC(kernel='sigmoid', gamma=1.0)\n","knc = KNeighborsClassifier(n_neighbors=49)\n","mnb = MultinomialNB(alpha=0.2)\n","dtc = DecisionTreeClassifier(min_samples_split=7, random_state=111)\n","lrc = LogisticRegression(solver='liblinear', penalty='l1')\n","rfc = RandomForestClassifier(n_estimators=31, random_state=111)\n","abc = AdaBoostClassifier(n_estimators=62, random_state=111)\n","bc = BaggingClassifier(n_estimators=9, random_state=111)\n","etc = ExtraTreesClassifier(n_estimators=9, random_state=111)"]},{"cell_type":"code","execution_count":39,"metadata":{"_cell_guid":"8e9f8c83-33fb-312a-fb44-d6f8c955f427","tags":[],"id":"ja3YVy4G_89x","executionInfo":{"status":"ok","timestamp":1743523271940,"user_tz":-180,"elapsed":9,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}}},"outputs":[],"source":["clfs = {'SVC' : svc,'KN' : knc, 'NB': mnb, 'DT': dtc, 'LR': lrc, 'RF': rfc, 'AdaBoost': abc, 'BgC': bc, 'ETC': etc}"]},{"cell_type":"markdown","metadata":{"_cell_guid":"030a45db-d84a-b8e2-30ca-09f3aff9501a","id":"KZIUyoLr_89x"},"source":["Let's make functions to fit our classifiers and make predictions"]},{"cell_type":"code","execution_count":22,"metadata":{"_cell_guid":"03099d8c-cac3-98a6-a68c-b6f22aed227c","tags":[],"id":"NoTgeVGH_89x","executionInfo":{"status":"ok","timestamp":1743522352394,"user_tz":-180,"elapsed":9,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}}},"outputs":[],"source":["def train_classifier(clf, feature_train, labels_train):\n","    clf.fit(feature_train, labels_train)"]},{"cell_type":"code","execution_count":23,"metadata":{"_cell_guid":"c74b2aba-431c-89e9-80be-0cf5ac718775","tags":[],"id":"czfNNQyp_89x","executionInfo":{"status":"ok","timestamp":1743522353171,"user_tz":-180,"elapsed":2,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}}},"outputs":[],"source":["def predict_labels(clf, features):\n","    return (clf.predict(features))"]},{"cell_type":"markdown","metadata":{"_cell_guid":"5f0b2d9a-6301-3515-4363-ffcd6b8b6e1b","id":"1miWYxFY_89x"},"source":["Now iterate through classifiers and save the results"]},{"cell_type":"code","execution_count":24,"metadata":{"_cell_guid":"803e954a-ca19-091d-85d6-7f58f0df4879","tags":[],"id":"_T8kzG5a_89x","executionInfo":{"status":"ok","timestamp":1743522363942,"user_tz":-180,"elapsed":10006,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}}},"outputs":[],"source":["pred_scores = []\n","pred_dict={}\n","for k,v in clfs.items():\n","    train_classifier(v, features_train, labels_train)\n","    pred = predict_labels(v,features_test)\n","    pred_scores.append((k, [accuracy_score(labels_test,pred)]))\n","    pred_dict[k]=[accuracy_score(labels_test,pred)]"]},{"cell_type":"code","execution_count":25,"metadata":{"_cell_guid":"52b248b9-679b-bb99-923a-97ce37440bfc","tags":[],"id":"H_XeyiHD_89x","colab":{"base_uri":"https://localhost:8080/","height":332},"executionInfo":{"status":"ok","timestamp":1743522367470,"user_tz":-180,"elapsed":21,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}},"outputId":"31a5c0dd-aec7-4d24-94b3-956980319416"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["             Score\n","SVC       0.978469\n","KN        0.924641\n","NB        0.984450\n","DT        0.958732\n","LR        0.943182\n","RF        0.970096\n","AdaBoost  0.933014\n","BgC       0.966507\n","ETC       0.977273"],"text/html":["\n","  <div id=\"df-efeef84f-c02d-46be-9e17-85ccda89c128\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>SVC</th>\n","      <td>0.978469</td>\n","    </tr>\n","    <tr>\n","      <th>KN</th>\n","      <td>0.924641</td>\n","    </tr>\n","    <tr>\n","      <th>NB</th>\n","      <td>0.984450</td>\n","    </tr>\n","    <tr>\n","      <th>DT</th>\n","      <td>0.958732</td>\n","    </tr>\n","    <tr>\n","      <th>LR</th>\n","      <td>0.943182</td>\n","    </tr>\n","    <tr>\n","      <th>RF</th>\n","      <td>0.970096</td>\n","    </tr>\n","    <tr>\n","      <th>AdaBoost</th>\n","      <td>0.933014</td>\n","    </tr>\n","    <tr>\n","      <th>BgC</th>\n","      <td>0.966507</td>\n","    </tr>\n","    <tr>\n","      <th>ETC</th>\n","      <td>0.977273</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-efeef84f-c02d-46be-9e17-85ccda89c128')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-efeef84f-c02d-46be-9e17-85ccda89c128 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-efeef84f-c02d-46be-9e17-85ccda89c128');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-55dc8fa6-4b1b-4f90-b058-682d3bb7939f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-55dc8fa6-4b1b-4f90-b058-682d3bb7939f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-55dc8fa6-4b1b-4f90-b058-682d3bb7939f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 9,\n  \"fields\": [\n    {\n      \"column\": \"Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.021339422739127003,\n        \"min\": 0.9246411483253588,\n        \"max\": 0.9844497607655502,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.9665071770334929,\n          0.9246411483253588,\n          0.9700956937799043\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":25}],"source":["df = pd.DataFrame.from_dict(pred_dict,orient='index', columns=['Score'])\n","df"]},{"cell_type":"code","execution_count":26,"metadata":{"_cell_guid":"c8f328a9-2fb9-70f3-97d7-77be91920131","tags":[],"id":"rYhOSCoS_89x","colab":{"base_uri":"https://localhost:8080/","height":615},"executionInfo":{"status":"ok","timestamp":1743522370655,"user_tz":-180,"elapsed":420,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}},"outputId":"c3bbe222-7208-4b98-e47f-4c456501488f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7a90ae4d0310>"]},"metadata":{},"execution_count":26},{"output_type":"display_data","data":{"text/plain":["<Figure size 1100x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["df.plot(kind='bar', ylim=(0.9,1.0), figsize=(11,6), align='center', colormap=\"Accent\")\n","plt.xticks(np.arange(9), df.index)\n","plt.ylabel('Accuracy Score')\n","plt.title('Distribution by Classifier')\n","plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)"]},{"cell_type":"markdown","metadata":{"_cell_guid":"9f0677da-7086-16bd-72ee-9b7773e450a6","id":"plkBk8zi_89y"},"source":["Looks like ensemble classifiers are not doing as good as expected."]},{"cell_type":"markdown","metadata":{"_cell_guid":"bb9b55cc-0b1d-2542-0d55-48a5c4b83b81","id":"CeNg0veH_89y"},"source":["### Stemmer"]},{"cell_type":"markdown","metadata":{"_cell_guid":"3f8663ef-bd68-2d8c-34b6-1231e7a665fe","id":"NnAOpw6k_89y"},"source":["Define our stemmer function"]},{"cell_type":"code","execution_count":27,"metadata":{"_cell_guid":"e5b19298-c67e-bc13-58b7-0f3de5221189","tags":[],"id":"TjX3BJ4R_89y","executionInfo":{"status":"ok","timestamp":1743522372359,"user_tz":-180,"elapsed":6,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}}},"outputs":[],"source":["def stemmer (text):\n","    text = text.split()\n","    words = \"\"\n","    for i in text:\n","            stemmer = SnowballStemmer(\"english\")\n","            words += (stemmer.stem(i))+\" \"\n","    return words"]},{"cell_type":"code","execution_count":28,"metadata":{"_cell_guid":"93da4610-5803-01b3-ff7c-17acc500650d","tags":[],"id":"isjxL8AV_89y","executionInfo":{"status":"ok","timestamp":1743522375137,"user_tz":-180,"elapsed":612,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}}},"outputs":[],"source":["text_feat = text_feat.apply(stemmer)"]},{"cell_type":"code","execution_count":29,"metadata":{"_cell_guid":"d3e882d5-737d-13c6-53a3-99173de104a8","tags":[],"id":"EfhbxwgL_892","executionInfo":{"status":"ok","timestamp":1743522375844,"user_tz":-180,"elapsed":70,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}}},"outputs":[],"source":["features = vectorizer.fit_transform(text_feat)"]},{"cell_type":"code","execution_count":30,"metadata":{"_cell_guid":"433d51e7-f5bf-e9d6-1c67-02274f4f2504","tags":[],"id":"FbNcBxbS_892","executionInfo":{"status":"ok","timestamp":1743522376497,"user_tz":-180,"elapsed":8,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}}},"outputs":[],"source":["features_train, features_test, labels_train, labels_test = train_test_split(features, sms['label'], test_size=0.3, random_state=111)"]},{"cell_type":"code","execution_count":31,"metadata":{"_cell_guid":"67c866a0-cdc6-7b4a-45e9-97a9bc60bcb0","tags":[],"id":"f4GyvCjT_892","executionInfo":{"status":"ok","timestamp":1743522385678,"user_tz":-180,"elapsed":8566,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}}},"outputs":[],"source":["pred_dict={}\n","for k,v in clfs.items():\n","    train_classifier(v, features_train, labels_train)\n","    pred = predict_labels(v,features_test)\n","    pred_dict[k]=[accuracy_score(labels_test,pred)]"]},{"cell_type":"code","execution_count":32,"metadata":{"_cell_guid":"0fc7b0b4-6f5a-0729-bdfd-c2d963f72e0e","tags":[],"id":"yyL96eQI_892","colab":{"base_uri":"https://localhost:8080/","height":332},"executionInfo":{"status":"ok","timestamp":1743522387597,"user_tz":-180,"elapsed":28,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}},"outputId":"9440d31c-0c0b-4593-8aa1-27eb4230c3f2"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["             Score    Score2\n","SVC       0.978469  0.978469\n","KN        0.924641  0.928230\n","NB        0.984450  0.985048\n","DT        0.958732  0.959928\n","LR        0.943182  0.946770\n","RF        0.970096  0.974880\n","AdaBoost  0.933014  0.934809\n","BgC       0.966507  0.968900\n","ETC       0.977273  0.977871"],"text/html":["\n","  <div id=\"df-504c0b35-8449-4def-a47e-655dc8d5aa2d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Score</th>\n","      <th>Score2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>SVC</th>\n","      <td>0.978469</td>\n","      <td>0.978469</td>\n","    </tr>\n","    <tr>\n","      <th>KN</th>\n","      <td>0.924641</td>\n","      <td>0.928230</td>\n","    </tr>\n","    <tr>\n","      <th>NB</th>\n","      <td>0.984450</td>\n","      <td>0.985048</td>\n","    </tr>\n","    <tr>\n","      <th>DT</th>\n","      <td>0.958732</td>\n","      <td>0.959928</td>\n","    </tr>\n","    <tr>\n","      <th>LR</th>\n","      <td>0.943182</td>\n","      <td>0.946770</td>\n","    </tr>\n","    <tr>\n","      <th>RF</th>\n","      <td>0.970096</td>\n","      <td>0.974880</td>\n","    </tr>\n","    <tr>\n","      <th>AdaBoost</th>\n","      <td>0.933014</td>\n","      <td>0.934809</td>\n","    </tr>\n","    <tr>\n","      <th>BgC</th>\n","      <td>0.966507</td>\n","      <td>0.968900</td>\n","    </tr>\n","    <tr>\n","      <th>ETC</th>\n","      <td>0.977273</td>\n","      <td>0.977871</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-504c0b35-8449-4def-a47e-655dc8d5aa2d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-504c0b35-8449-4def-a47e-655dc8d5aa2d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-504c0b35-8449-4def-a47e-655dc8d5aa2d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-858ba429-3249-4db2-a3ea-86b4647ef872\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-858ba429-3249-4db2-a3ea-86b4647ef872')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-858ba429-3249-4db2-a3ea-86b4647ef872 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 9,\n  \"fields\": [\n    {\n      \"column\": \"Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.021339422739127003,\n        \"min\": 0.9246411483253588,\n        \"max\": 0.9844497607655502,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.9665071770334929,\n          0.9246411483253588,\n          0.9700956937799043\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Score2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.020563303082103867,\n        \"min\": 0.9282296650717703,\n        \"max\": 0.9850478468899522,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.9688995215311005,\n          0.9282296650717703,\n          0.9748803827751196\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":32}],"source":["df2 = pd.DataFrame.from_dict(pred_dict,orient='index', columns=['Score2'])\n","df = pd.concat([df,df2],axis=1)\n","df"]},{"cell_type":"code","execution_count":33,"metadata":{"_cell_guid":"bdee0cfd-c0c8-c488-d763-2610bccff986","tags":[],"id":"C4PkBw8B_892","colab":{"base_uri":"https://localhost:8080/","height":615},"executionInfo":{"status":"ok","timestamp":1743522390419,"user_tz":-180,"elapsed":327,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}},"outputId":"cc29e595-534e-4937-ebec-e26af55863ac"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7a90adeb53d0>"]},"metadata":{},"execution_count":33},{"output_type":"display_data","data":{"text/plain":["<Figure size 1100x600 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAABDQAAAJFCAYAAAAiQKckAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAcCNJREFUeJzt3XlclOX+//H3jMOIooi44IKCiCuHXDD3BTON0txLj54yLbOjdcosj1kdrXOstMXOSW3PsvTgclxS0zK3UFOzVbTccCtxIQJyAWaY+f3hz/lKLOrIcHPD6/l4+DjOfV9zzWc+THh4c93XbXG73W4BAAAAAACYiNXoAgAAAAAAAK4VgQYAAAAAADAdAg0AAAAAAGA6BBoAAAAAAMB0CDQAAAAAAIDpEGgAAAAAAADTIdAAAAAAAACmQ6ABAAAAAABMh0ADAAAAAACYDoEGAOCKYmNjZbFYDHv9e+65RxaLRUeOHPEcO3LkiCwWi+655x7D6pKM701+wsPDFR4ebnQZ16Sk1rxp0yZZLBZNnTo1z7ldu3apZ8+eql69uiwWi1q2bCkp/88rAAAoejajCwAAFI8//tBtt9sVGBioevXqqXXr1ho0aJB69eqlcuXKFflrX/pB1Yw/4N1zzz364IMPdPjw4RL5A3dJ9euvv2rOnDlas2aN9u/fr/T0dAUGBqp58+a69dZbde+99yokJMToMr2WkZGh3r17KzMzU3fddZeqV6+uWrVqGV0WAABlisXtdruNLgIA4HuXAo0pU6ZIknJycpSWlqY9e/Zo69atys7OVps2bTR//nw1btw413OPHTum8+fPq2nTpl699vUGGsnJyUpPT1fDhg3l5+fnmatBgwYaMWKE3n//fa/mvRpXCjSutze+YHSAtGrVKv3lL39Renq6IiMjFRsbq5o1ayo9PV07duzQ119/rYoVK+rgwYOeEMDomgty/vx5HTt2TNWrV1f16tU9xz///HP17NlT06ZN0+TJk3M9J7/PKwAAKHqs0ACAMia/pfOnTp3SQw89pMWLF+vmm2/Wrl27VLNmTc/5+vXrF2OFedWuXVu1a9c2tIaCGN2bkmbz5s0aMGCAbDab5s6dqxEjRuRZHbR79249/PDDyszMNKjKq1exYsV8w6oTJ05IkurUqZPnXEn+vAIAUJqwhwYAQCEhIYqPj1dsbKyOHz+u5557Ltf5/PaJcLvd+uCDD9SxY0fVqFFD/v7+qlevnm655RYtXLhQ0v/tP3D06FEdPXpUFovF8+fyvS8sFotiY2N18uRJ3Xfffapbt67KlSvnWXlxpT0JfvrpJ/Xv31/BwcEKCAhQ586d9dlnn+UZN3XqVFksFm3atCnPufz25LBYLPrggw8kSQ0aNPDUfvlKjYL20HC5XHrjjTd04403qlKlSgoICNCNN96o119/XS6XK8/4Sz1ISUnR/fffr9q1a6t8+fKKiorS3Llz833fV5Kenq4HH3xQdevWlb+/v5o3b67//Oc/unxx5k8//SSLxaLu3bsXOE90dLT8/PyUnJxc6Ou5XC6NGTNGTqdT//73vz1ft/zm+/zzz1W3bt0r1v/iiy/qpptuUmhoqOx2u2rUqKG+ffvqyy+/zPc5CQkJuv322xUaGqry5curVq1aat++vZ555plc406dOqXHHntMTZo0UUBAgIKCgtSkSRPdc889SkpK8oz74x4alz4nI0aMkCSNHDnS87m4ms/rjh07NHjwYNWqVUt2u1316tXTmDFjPAHJ5S59trKzs/Xss8+qSZMmKl++vOH7xgAAUFKwQgMAIEmyWq166qmntGnTJv33v//VzJkzC93s8sknn9Tzzz+vBg0a6M4771SVKlWUnJysr776SosXL9aQIUMUHh6uKVOm6NVXX5UkPfLII57nX9pA8ZLU1FS1b99elSpV0sCBA2W1Wq9qj4XDhw+rQ4cOio6O1pgxY5ScnKyFCxfq1ltv1YIFCzRkyBBv2iHp4uU5y5cv1/fff6+HH35YQUFBkuT538LcddddWrBggerVq6f77rtPFotFy5Yt09ixY7VlyxbNnz8/z3PS0tLUqVMn2e12DR48WFlZWVq8eLFGjRolq9Xq+SH6amRnZ+vmm29WWlqahg4dquzsbP3vf//Tww8/rH379mn27NmSpKZNm6p79+7auHGj9u/fn+dyo23btikxMVGDBg264qqDzZs3a9++fapbt67uvffeQsdarVZZrYX/XuXHH3/Uk08+qa5du6p3796qWrWqjh07po8//lhr1qzRypUrFRcX5xm/du1a9e7dW4GBgerbt6/q1q2r1NRU/fjjj5ozZ47ncqvz58+rU6dOOnTokHr27Knbb79dbrdbR48e1YoVKzR48GBFRETkW1NQUJCmTJmi7777TitWrFC/fv08n+U/fqb/6L333tP999+v8uXLq2/fvqpXr54OHDigd955RytXrtT27dvzXfEzaNAgffXVV7r11lvVv3//XKunAAAo09wAgDJBkvtK3/YzMzPdNpvNLcmdlJTkOd6tW7c8zw0ODnbXrVvXfe7cuTzznDlzJtfjsLAwd1hY2BVru+uuu9wOhyPP+REjRrgluQ8fPuw5dvjwYc/zHnvssVzjv/rqK7fNZnMHBQW509PTPcenTJniluTeuHFjnte4NN+IESOu+NqXy683CxYscEtyt2rVyv377797jp89e9YdExPjluSeP39+vj2499573U6n03N8z5497nLlyrmbNWuW7+vnJywszC3J3alTJ3dmZqbn+K+//uqOiIhwS3Jv3rzZc3zx4sVuSe4JEybkmevS+//ss8+u+LrPPvusW5J7+PDhV13r5TX/8TOSlpaW57Pkdrvdx48fd9euXdvdtGnTXMcHDhzoluT+7rvv8jzn8nk+/vhjtyT3I488kmdcVlaWOyMjw/N448aNbknuKVOm5Bo3d+5ctyT33Llz88yR32dm3759bj8/P3fDhg3dP//8c67xn3/+udtqtbr79++f6/ilz1Z0dHS+fQAAoKzjkhMAgEf58uVVrVo1SdKZM2euON7Pzy/fu6Jcvnni1bLb7XrppZdks13b4sEqVaroH//4R65jbdq00fDhw5WWlqZly5Zdcy3X67333pMkvfDCC6pUqZLneEBAgKZPny5Jeuedd/I8r2LFinrllVdy9bR58+bq1KmTfvzxR509e/aa6nj++edVvnx5z+Pg4GA9/fTTkpTrMpb+/furdu3aev/995WVleU5npaWpkWLFqlhw4a6+eabr/h6ly5JCQ0NvaY6C1KlSpV8P0uhoaEaPHiwfvrpJx07dizP+QoVKuQ5lt88+Y2z2+2qXLmylxUX7PXXX5fD4dC///3vPJfa9OjRQ3379tXKlSv1+++/53nuP//5T6/+mwIAoLQj0AAA5OL+//srFHa5iSQNHz5cR44cUfPmzfXEE09o7dq1Sk9P9/p1w8PDvVpK37p163x/AI2NjZUkffvtt17X5K1vvvlGVqvVU8PlunXrpnLlyuVbV6NGjRQYGJjneL169SRJv/3221XXYLPZ1LFjxzzH8+uLzWbT6NGj9euvv+p///uf5/iHH36oCxcu6P7777/i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P3v2rPuBBx5w161b112uXDm3JPeIESNy1datW7cCax8xYoRbkvvw4cOeY4cPH/bMs3fvXnffvn3dQUFB7goVKrg7duzoXrt2bb5z/fbbb+777rvPXaNGDbfdbndHRUW533zzzVzz/dHLL7/sbtq0qdtut7slucPCwgrszSU5OTnu2bNnu2NiYtwVKlRwV6hQwd26dWv3rFmz8u1zYT3I7/0XJiwszB0WFuZOS0tzjx071l2nTh233W53N23a1P3vf//b7XK5Cnxuamqq22q1uv39/d0pKSlX9Xr5SUlJcT/77LPuDh06uIODg902m81dtWpVd4cOHdz//Oc/3adOncq35j+aO3euu0WLFu6KFSu6q1Wr5u7fv7/7hx9+cE+ZMsUtyb1x40bP2IULF7qHDh3qjoyMdAcEBLgrV67sjoqKck+ePNl9+vRpz7i9e/e6x48f746JiXFXr17dbbfb3WFhYe5Bgwa5t27dmuv1N27c6JbknjJlSp66JLnnzp2bp+bCvl4//PCDe8SIEe769eu77Xa7u2rVqu6oqCj3/fff716/fn2usQV9tgAAwEUWtzuftaAAAKBM2rRpk7p3766//OUv+vDDD40uBwAAoEDsoQEAADxmzJghSYVeUgMAAFASsIcGAABl3O7du7Vq1Sp9/fXXWrNmjfr06aN27doZXRYAAEChCDQAACjjvv76a02ePFmBgYG64447NGfOHKNLAgAAuKIStYfG3r179fHHH+vw4cP67bff9Nhjj3lusVeQPXv2aN68eTp+/LiqVaumQYMGKTY2NteYtWvXauXKlUpLS1NYWJhGjRqlyMhIH74TAAAAAADgSyVqD42srCyFh4fr3nvvvarxp0+f1gsvvKCoqCjNmDFDvXv31htvvKHvvvvOM2bbtm2aN2+eBg8erOnTpyssLEzTpk1Tenq6j94FAAAAAADwtRJ1yUmrVq3UqlWrqx7/2WefqWbNmrr77rslSaGhofrpp5+0evVqtWzZUpK0atUq9ejRQ927d5ckjR49Wt988402btyo/v37F/VbAAAAAAAAxaBErdC4VgcOHFB0dHSuYy1atND+/fslSU6nU0lJSbnGWK1WRUdHe8bkx+Fw6Pz587n+OBwO37wJAAAAAABwzUrUCo1rlZaWpipVquQ6VqVKFV24cEHZ2dk6e/asXC6XgoKCco0JCgrS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+fv7q2LFitf0nJSUFE2fPl2ff/65zpw5oypVqigqKkoTJkxQu3btfFRp4RwOh55//nmtX79eR48eVeXKldW1a1c9/fTTqlWr1nXNTaABAAAAAMAVZGZm6pVXXim213v00UevOdAYNWqUHA6HXnvtNYWFhenMmTNKSEjQb7/95pMas7OzZbfbCx1z4cIF/fDDD3r00UcVFRWltLQ0PfXUU7rrrru0bt2663p9LjkBAAAAAMDk0tPTtX37dj399NPq3Lmz6tWrp9atW+vhhx9WXFycZ8yECRPUvHlz1atXT127dtVnn33mmWPlypXq0qWLQkNDFRMTozlz5uR6jZiYGL388ssaN26cIiIiNGHCBEnS9u3bdfvtt6t+/fpq2bKlJk+erHPnzkmSAgMDtWTJEvXr10+RkZFq06aNnn/+eX3//ff6+eefr+s9E2gAAAAAAGByAQEBCggI0Jo1a5SVlZXnvMvl0tChQ/XVV19pzpw5SkhI0FNPPaVy5cpJkr7//nuNHj1a/fv31+bNm/X4449r+vTpio+PzzXPnDlzFBUVpfXr1+vRRx/V4cOHNXToUPXp00ebNm3SW2+9pR07duiJJ54osNaMjAxZLBZVqVLlut4zl5wAAAAAAGByNptN//nPfzRhwgR98MEHio6OVseOHdW/f39FRUVp8+bN+vbbb7V161Y1bNhQkhQeHu55/uuvv64uXbp4Vl00bNhQ+/bt0+zZszV06FDPuM6dO2vs2LGex+PHj9egQYM0ZswYSVJERISmTZum/v37a8aMGfL3989VZ2Zmpv75z39qwIABqly58nW9Z1ZoAAAAAABQCtx+++364YcfNG/ePN10003aunWrbr75ZsXHxysxMVF16tTxhBl/dODAAbVt2zbXsbZt2yopKUk5OTmeYy1btsw1Zs+ePVq4cKHCw8M9f4YOHSqXy6Vjx47lGutwODR69Gi53W69+OKL1/1+WaEBAAAAAEAp4e/vr9jYWMXGxmrChAkaP368ZsyYkWtVxfX440al586d091336377rsvz9jQ0FDP3x0Oh+677z4dP35cS5cuve7VGRKBBgAAAAAApVbjxo21Zs0aNW/eXCdOnNChQ4fyXaXRqFEj7dy5M9exnTt3qmHDhp59NvITHR2tffv2KSIiosAxl8KMw4cPa+nSpQoODvb+DV2GS04AAAAAADC5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Vi7t9KGmTZvqgw8+UJMmTXTw4EGNHz9ekpScnMyGuMUgMjKSH6CL2TPPPKO33nqL3gOFINAoRW655RZt3rxZH3/8sZo0aaKbbrpJHTp0YOlrMfnvf/+rypUr57tSIzMzU88995x+//13Ayor3a7mkhOLxaL4+PhiqKZs2bRpk3788Uc9/fTT+tOf/pTrXGJiol588UVt3rz5qlYvAWawcOFCff7554qOjtb+/fs1c+ZMxcbG6sCBA7r77rvVoUOHQi85xPW599579c4772jHjh0aPXq051at3377rVq0aGFwdaXf0aNH8z1+aWPi6tWrX/E23gBQ1Ag0SpHBgwdr8ODB2rNnjzZu3Kh3331Xc+fOVYcOHdSjRw81atTI6BJLtYceekivvfaaAgICcu1wn5mZqWnTpikjI4PLI3ygsD1J9u/frzVr1oitgnxj69atGjBgQJ4wQ5L+9Kc/qV+/ftqyZQuBBkqN7du368EHH1SbNm107NgxPf7448rJydGLL77I5VXFoHr16po0aVKe4/fcc0/xF1MGXWnFnc1mU4cOHXT//fdzO+8ixPcWoHAEGqVQVFSUoqKidN9992nr1q3atGmTnnrqKdWtW1c33XRToZdFwHvt27fXuXPn9O9//1uTJk1SVFSUZ2VGenq6pk6d6vltEopOfneTOXHihObPn6+vv/5anTt3vuqNQ3Ftjh49qr/85S8Fnm/VqpXWrFlTjBUBvvXrr78qIiJC0sXLDG02m/r06cMPHMXI5XJp586d+uWXXyRJ9erVU5s2bVgZUwwee+wxzZ8/X3379vVc/nDw4EGtXLlSd9xxh3JycrRgwQLFx8fr7rvvNrja0mP27NlXXPnChvMoywg0SjF/f3/16NFDPXr00DfffKNZs2bpww8/JNDwoR49eujs2bOaMWOGJk6cqEWLFum3334jzCgmqampWrRokTZv3qwWLVpoxowZql+/vtFllVpnz54t9A4nVapU0blz54qxorLjpZdeKvQ8ffeNS5tvX1KuXDnPrXPheydPntTzzz+v1NRUz63ply9frmrVqmnSpEmqVauWwRWWbkuXLtU999yjli1beo7Vr19fwcHBWrhwoZ5//nmVL19eH374IYFGEapQoQIrXoBCEGiUYllZWfryyy+1ceNG/fTTT6pVq5b69u1rdFmlXr9+/XT27Fk9++yzqlmz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\n"},"metadata":{}}],"source":["df.plot(kind='bar', ylim=(0.85,1.0), figsize=(11,6), align='center', colormap=\"Accent\")\n","plt.xticks(np.arange(9), df.index)\n","plt.ylabel('Accuracy Score')\n","plt.title('Distribution by Classifier')\n","plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)"]},{"cell_type":"markdown","metadata":{"_cell_guid":"eb1afe61-9bf0-7a48-8553-913faa8f2ce3","id":"jqSQkDLv_892"},"source":["Looks like mostly the same . Ensemble classifiers doing a little bit better, NB still got the lead."]},{"cell_type":"markdown","metadata":{"_cell_guid":"cbf377a8-4f68-b82a-3c19-e26f73f40e35","id":"UZfODHtV_892"},"source":["### Voting classifier"]},{"cell_type":"markdown","metadata":{"_cell_guid":"7e8131cd-5934-4411-9687-f61a27751a95","id":"UEaSYtmm_892"},"source":["We are using ensemble algorithms here, but what about ensemble of ensembles? Will it beat NB?"]},{"cell_type":"code","execution_count":34,"metadata":{"_cell_guid":"e76bd4e6-6384-dcc7-2d5e-1731383c3af7","tags":[],"id":"igr1UCIg_893","executionInfo":{"status":"ok","timestamp":1743522392461,"user_tz":-180,"elapsed":6,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}}},"outputs":[],"source":["from sklearn.ensemble import VotingClassifier"]},{"cell_type":"code","execution_count":35,"metadata":{"_cell_guid":"9d59abce-ba88-1f77-b6cd-2f992fec95ac","tags":[],"id":"_MjRr6f5_893","executionInfo":{"status":"ok","timestamp":1743522393419,"user_tz":-180,"elapsed":4,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}}},"outputs":[],"source":["eclf = VotingClassifier(estimators=[('BgC', bc), ('ETC', etc), ('RF', rfc), ('Ada', abc)], voting='soft')"]},{"cell_type":"code","execution_count":36,"metadata":{"_cell_guid":"743afa06-5134-466b-cc31-18f54eb93f0b","tags":[],"id":"rqQfwESC_893","colab":{"base_uri":"https://localhost:8080/","height":136},"executionInfo":{"status":"ok","timestamp":1743522401797,"user_tz":-180,"elapsed":7736,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}},"outputId":"40837282-12a4-4eb9-f2f5-8c5b4a700730"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["VotingClassifier(estimators=[('BgC',\n","                              BaggingClassifier(n_estimators=9,\n","                                                random_state=111)),\n","                             ('ETC',\n","                              ExtraTreesClassifier(n_estimators=9,\n","                                                   random_state=111)),\n","                             ('RF',\n","                              RandomForestClassifier(n_estimators=31,\n","                                                     random_state=111)),\n","                             ('Ada',\n","                              AdaBoostClassifier(n_estimators=62,\n","                                                 random_state=111))],\n","                 voting='soft')"],"text/html":["<style>#sk-container-id-1 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: #000;\n","  --sklearn-color-text-muted: #666;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-1 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-1 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-1 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-1 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-1 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-1 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-1 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-1 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: flex;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","  align-items: start;\n","  justify-content: space-between;\n","  gap: 0.5em;\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label .caption {\n","  font-size: 0.6rem;\n","  font-weight: lighter;\n","  color: var(--sklearn-color-text-muted);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-1 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-1 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-1 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-1 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-1 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-1 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 0.5em;\n","  text-align: center;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-1 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-1 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>VotingClassifier(estimators=[(&#x27;BgC&#x27;,\n","                              BaggingClassifier(n_estimators=9,\n","                                                random_state=111)),\n","                             (&#x27;ETC&#x27;,\n","                              ExtraTreesClassifier(n_estimators=9,\n","                                                   random_state=111)),\n","                             (&#x27;RF&#x27;,\n","                              RandomForestClassifier(n_estimators=31,\n","                                                     random_state=111)),\n","                             (&#x27;Ada&#x27;,\n","                              AdaBoostClassifier(n_estimators=62,\n","                                                 random_state=111))],\n","                 voting=&#x27;soft&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>VotingClassifier</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.ensemble.VotingClassifier.html\">?<span>Documentation for VotingClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>VotingClassifier(estimators=[(&#x27;BgC&#x27;,\n","                              BaggingClassifier(n_estimators=9,\n","                                                random_state=111)),\n","                             (&#x27;ETC&#x27;,\n","                              ExtraTreesClassifier(n_estimators=9,\n","                                                   random_state=111)),\n","                             (&#x27;RF&#x27;,\n","                              RandomForestClassifier(n_estimators=31,\n","                                                     random_state=111)),\n","                             (&#x27;Ada&#x27;,\n","                              AdaBoostClassifier(n_estimators=62,\n","                                                 random_state=111))],\n","                 voting=&#x27;soft&#x27;)</pre></div> </div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><label>BgC</label></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>BaggingClassifier</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.ensemble.BaggingClassifier.html\">?<span>Documentation for BaggingClassifier</span></a></div></label><div class=\"sk-toggleable__content fitted\"><pre>BaggingClassifier(n_estimators=9, random_state=111)</pre></div> </div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><label>ETC</label></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>ExtraTreesClassifier</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.ensemble.ExtraTreesClassifier.html\">?<span>Documentation for ExtraTreesClassifier</span></a></div></label><div class=\"sk-toggleable__content fitted\"><pre>ExtraTreesClassifier(n_estimators=9, random_state=111)</pre></div> </div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><label>RF</label></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>RandomForestClassifier</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.ensemble.RandomForestClassifier.html\">?<span>Documentation for RandomForestClassifier</span></a></div></label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestClassifier(n_estimators=31, random_state=111)</pre></div> </div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><label>Ada</label></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" ><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>AdaBoostClassifier</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.ensemble.AdaBoostClassifier.html\">?<span>Documentation for AdaBoostClassifier</span></a></div></label><div class=\"sk-toggleable__content fitted\"><pre>AdaBoostClassifier(n_estimators=62, random_state=111)</pre></div> </div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":36}],"source":["eclf.fit(features_train,labels_train)"]},{"cell_type":"code","execution_count":37,"metadata":{"_cell_guid":"d834da3c-3dc9-e209-0c80-9f93c3d8a519","tags":[],"id":"Ff4Zi6rR_893","executionInfo":{"status":"ok","timestamp":1743522401837,"user_tz":-180,"elapsed":41,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}}},"outputs":[],"source":["pred = eclf.predict(features_test)"]},{"cell_type":"code","execution_count":38,"metadata":{"_cell_guid":"4de3ce6c-3c95-9fe5-e5dd-0888db0bbb12","tags":[],"id":"lBwk-4jD_893","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1743522401850,"user_tz":-180,"elapsed":12,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}},"outputId":"bc25ce4f-a6f4-44d3-f255-ec103acea19e"},"outputs":[{"output_type":"stream","name":"stdout","text":["0.9784688995215312\n"]}],"source":["print(accuracy_score(labels_test,pred))"]},{"cell_type":"markdown","metadata":{"_cell_guid":"7f834a34-00d0-d310-91fd-4e5282811ae4","id":"QzUoDTJp_893"},"source":["Better but nope."]},{"cell_type":"markdown","metadata":{"_cell_guid":"0437b30e-96a9-2ef5-44f8-7dc6b94ed8a6","id":"O-6GXsue_893"},"source":["### Final verdict - well tuned NaiveBayes is your friend in spam detection."]}],"metadata":{"_change_revision":260,"_is_fork":false,"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"},"vscode":{"interpreter":{"hash":"916dbcbb3f70747c44a77c7bcd40155683ae19c65e1c03b4aa3499c5328201f1"}},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":0}
