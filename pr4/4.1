{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNQWx6TMvFgFGys2tY9N6Za"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sZqVxppkcnGk","executionInfo":{"status":"ok","timestamp":1748310486790,"user_tz":-180,"elapsed":16960,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}},"outputId":"21ad2203-b035-4880-b171-3460abca3626"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: scrapy in /usr/local/lib/python3.11/dist-packages (2.13.0)\n","Requirement already satisfied: nest_asyncio in /usr/local/lib/python3.11/dist-packages (1.6.0)\n","Requirement already satisfied: nltk in /usr/local/lib/python3.11/dist-packages (3.9.1)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.11/dist-packages (3.10.0)\n","Requirement already satisfied: pymystem3 in /usr/local/lib/python3.11/dist-packages (0.2.0)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.11/dist-packages (2.2.2)\n","Requirement already satisfied: cryptography>=37.0.0 in /usr/local/lib/python3.11/dist-packages (from scrapy) (43.0.3)\n","Requirement already satisfied: cssselect>=0.9.1 in /usr/local/lib/python3.11/dist-packages (from scrapy) (1.3.0)\n","Requirement already satisfied: defusedxml>=0.7.1 in /usr/local/lib/python3.11/dist-packages (from scrapy) (0.7.1)\n","Requirement already satisfied: itemadapter>=0.1.0 in /usr/local/lib/python3.11/dist-packages (from scrapy) (0.11.0)\n","Requirement already satisfied: itemloaders>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from scrapy) (1.3.2)\n","Requirement already satisfied: lxml>=4.6.0 in /usr/local/lib/python3.11/dist-packages (from scrapy) (5.4.0)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.11/dist-packages (from scrapy) (24.2)\n","Requirement already satisfied: parsel>=1.5.0 in /usr/local/lib/python3.11/dist-packages (from scrapy) (1.10.0)\n","Requirement already satisfied: protego>=0.1.15 in /usr/local/lib/python3.11/dist-packages (from scrapy) (0.4.0)\n","Requirement already satisfied: pydispatcher>=2.0.5 in /usr/local/lib/python3.11/dist-packages (from scrapy) (2.0.7)\n","Requirement already satisfied: pyopenssl>=22.0.0 in /usr/local/lib/python3.11/dist-packages (from scrapy) (24.2.1)\n","Requirement already satisfied: queuelib>=1.4.2 in /usr/local/lib/python3.11/dist-packages (from scrapy) (1.8.0)\n","Requirement already satisfied: service-identity>=18.1.0 in /usr/local/lib/python3.11/dist-packages (from scrapy) (24.2.0)\n","Requirement already satisfied: tldextract in /usr/local/lib/python3.11/dist-packages (from scrapy) (5.3.0)\n","Requirement already satisfied: twisted>=21.7.0 in /usr/local/lib/python3.11/dist-packages (from scrapy) (24.11.0)\n","Requirement already satisfied: w3lib>=1.17.0 in /usr/local/lib/python3.11/dist-packages (from scrapy) (2.3.1)\n","Requirement already satisfied: zope-interface>=5.1.0 in /usr/local/lib/python3.11/dist-packages (from scrapy) (7.2)\n","Requirement already satisfied: click in /usr/local/lib/python3.11/dist-packages (from nltk) (8.2.0)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.11/dist-packages (from nltk) (1.5.0)\n","Requirement already satisfied: regex>=2021.8.3 in /usr/local/lib/python3.11/dist-packages (from nltk) (2024.11.6)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.11/dist-packages (from nltk) (4.67.1)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (1.3.2)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (4.58.0)\n","Requirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (1.4.8)\n","Requirement already satisfied: numpy>=1.23 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (2.0.2)\n","Requirement already satisfied: pillow>=8 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (11.2.1)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (3.2.3)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (2.9.0.post0)\n","Requirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (from pymystem3) (2.32.3)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas) (2025.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas) (2025.2)\n","Requirement already satisfied: cffi>=1.12 in /usr/local/lib/python3.11/dist-packages (from cryptography>=37.0.0->scrapy) (1.17.1)\n","Requirement already satisfied: jmespath>=0.9.5 in /usr/local/lib/python3.11/dist-packages (from itemloaders>=1.0.1->scrapy) (1.0.1)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.7->matplotlib) (1.17.0)\n","Requirement already satisfied: attrs>=19.1.0 in /usr/local/lib/python3.11/dist-packages (from service-identity>=18.1.0->scrapy) (25.3.0)\n","Requirement already satisfied: pyasn1 in /usr/local/lib/python3.11/dist-packages (from service-identity>=18.1.0->scrapy) (0.6.1)\n","Requirement already satisfied: pyasn1-modules in /usr/local/lib/python3.11/dist-packages (from service-identity>=18.1.0->scrapy) (0.4.2)\n","Requirement already satisfied: automat>=24.8.0 in /usr/local/lib/python3.11/dist-packages (from twisted>=21.7.0->scrapy) (25.4.16)\n","Requirement already satisfied: constantly>=15.1 in /usr/local/lib/python3.11/dist-packages (from twisted>=21.7.0->scrapy) (23.10.4)\n","Requirement already satisfied: hyperlink>=17.1.1 in /usr/local/lib/python3.11/dist-packages (from twisted>=21.7.0->scrapy) (21.0.0)\n","Requirement already satisfied: incremental>=24.7.0 in /usr/local/lib/python3.11/dist-packages (from twisted>=21.7.0->scrapy) (24.7.2)\n","Requirement already satisfied: typing-extensions>=4.2.0 in /usr/local/lib/python3.11/dist-packages (from twisted>=21.7.0->scrapy) (4.13.2)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.11/dist-packages (from zope-interface>=5.1.0->scrapy) (75.2.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests->pymystem3) (3.4.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests->pymystem3) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests->pymystem3) (2.4.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests->pymystem3) (2025.4.26)\n","Requirement already satisfied: requests-file>=1.4 in /usr/local/lib/python3.11/dist-packages (from tldextract->scrapy) (2.1.0)\n","Requirement already satisfied: filelock>=3.0.8 in /usr/local/lib/python3.11/dist-packages (from tldextract->scrapy) (3.18.0)\n","Requirement already satisfied: pycparser in /usr/local/lib/python3.11/dist-packages (from cffi>=1.12->cryptography>=37.0.0->scrapy) (2.22)\n"]}],"source":["# Установка необходимых библиотек\n","!pip install scrapy nest_asyncio nltk matplotlib pymystem3 pandas\n","\n","# Импорт библиотек\n","import scrapy\n","from scrapy.crawler import CrawlerProcess\n","from collections import Counter\n","import re\n","import nest_asyncio\n","import nltk\n","from nltk.corpus import stopwords\n","import matplotlib.pyplot as plt\n","from pymystem3 import Mystem\n","import pandas as pd\n","\n","# Разрешение вложенных событийных циклов\n","nest_asyncio.apply()"]},{"cell_type":"code","source":["# Скачивание стоп-слов для русского языка\n","nltk.download('stopwords')\n","stop_words = set(stopwords.words('russian'))\n","\n","# Инициализация морфологического анализатора\n","mystem = Mystem()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6aEaEhNBQe0V","executionInfo":{"status":"ok","timestamp":1748310486877,"user_tz":-180,"elapsed":91,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}},"outputId":"c0456543-43a0-42a4-e474-ed5ce200e6f9"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n"]}]},{"cell_type":"code","source":["class WikiSpider(scrapy.Spider):\n","    name = \"wiki_spider\"\n","    start_urls = ['https://ru.wikipedia.org/wiki/Информационная_безопасность']\n","    custom_settings = {\n","        'ROBOTSTXT_OBEY': True,\n","        'DOWNLOAD_DELAY': 1,\n","        'USER_AGENT': 'MyBot (example@example.com)'\n","    }\n","\n","    def parse(self, response):\n","        # Извлечение текста из параграфов\n","        paragraphs = response.css('p::text').getall()\n","        text = ' '.join(paragraphs)\n","        # Передаём текст для обработки\n","        self.process_text(text)\n","\n","    def process_text(self, text):\n","        # Очистка текста\n","        words = re.findall(r'\\b\\w+\\b', text.lower())\n","        # Фильтрация стоп-слов и лемматизация\n","        filtered_lemmas = [mystem.lemmatize(word)[0] for word in words if word not in stop_words]\n","        # Подсчёт частоты лемм\n","        lemma_counts = Counter(filtered_lemmas)\n","        # Сохранение в CSV\n","        self.save_to_csv(lemma_counts)\n","\n","    def save_to_csv(self, lemma_counts):\n","        # Создание DataFrame из подсчёта лемм\n","        df = pd.DataFrame(lemma_counts.items(), columns=['Lemma', 'Frequency'])\n","        # Сортировка по убыванию частоты\n","        df = df.sort_values(by='Frequency', ascending=False)\n","        # Сохранение в CSV\n","        df.to_csv('word_frequencies.csv', index=False, encoding='utf-8')\n","        print(\"Датасет сохранён в word_frequencies.csv\")"],"metadata":{"id":"WrWx0P_w72E3","executionInfo":{"status":"ok","timestamp":1748310486929,"user_tz":-180,"elapsed":44,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["# Запуск паука\n","process = CrawlerProcess()\n","process.crawl(WikiSpider)\n","process.start()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"owJ3eS4XOtWA","executionInfo":{"status":"ok","timestamp":1748310491254,"user_tz":-180,"elapsed":4327,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}},"outputId":"e5342fd8-3eb4-4edd-dd15-dd723a269457"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stderr","text":["INFO:scrapy.utils.log:Scrapy 2.13.0 started (bot: scrapybot)\n","2025-05-27 01:48:06 [scrapy.utils.log] INFO: Scrapy 2.13.0 started (bot: scrapybot)\n","INFO:scrapy.utils.log:Versions:\n","{'lxml': '5.4.0',\n"," 'libxml2': '2.13.8',\n"," 'cssselect': '1.3.0',\n"," 'parsel': '1.10.0',\n"," 'w3lib': '2.3.1',\n"," 'Twisted': '24.11.0',\n"," 'Python': '3.11.12 (main, Apr  9 2025, 08:55:54) [GCC 11.4.0]',\n"," 'pyOpenSSL': '24.2.1 (OpenSSL 3.3.2 3 Sep 2024)',\n"," 'cryptography': '43.0.3',\n"," 'Platform': 'Linux-6.1.123+-x86_64-with-glibc2.35'}\n","2025-05-27 01:48:06 [scrapy.utils.log] INFO: Versions:\n","{'lxml': '5.4.0',\n"," 'libxml2': '2.13.8',\n"," 'cssselect': '1.3.0',\n"," 'parsel': '1.10.0',\n"," 'w3lib': '2.3.1',\n"," 'Twisted': '24.11.0',\n"," 'Python': '3.11.12 (main, Apr  9 2025, 08:55:54) [GCC 11.4.0]',\n"," 'pyOpenSSL': '24.2.1 (OpenSSL 3.3.2 3 Sep 2024)',\n"," 'cryptography': '43.0.3',\n"," 'Platform': 'Linux-6.1.123+-x86_64-with-glibc2.35'}\n","INFO:scrapy.addons:Enabled addons:\n","[]\n","2025-05-27 01:48:06 [scrapy.addons] INFO: Enabled addons:\n","[]\n","DEBUG:scrapy.utils.log:Using reactor: twisted.internet.asyncioreactor.AsyncioSelectorReactor\n","2025-05-27 01:48:06 [scrapy.utils.log] DEBUG: Using reactor: twisted.internet.asyncioreactor.AsyncioSelectorReactor\n","DEBUG:scrapy.utils.log:Using asyncio event loop: asyncio.unix_events._UnixSelectorEventLoop\n","2025-05-27 01:48:06 [scrapy.utils.log] DEBUG: Using asyncio event loop: asyncio.unix_events._UnixSelectorEventLoop\n","INFO:scrapy.extensions.telnet:Telnet Password: 4b32ff5e6a3b51fb\n","2025-05-27 01:48:06 [scrapy.extensions.telnet] INFO: Telnet Password: 4b32ff5e6a3b51fb\n","INFO:scrapy.middleware:Enabled extensions:\n","['scrapy.extensions.corestats.CoreStats',\n"," 'scrapy.extensions.telnet.TelnetConsole',\n"," 'scrapy.extensions.memusage.MemoryUsage',\n"," 'scrapy.extensions.logstats.LogStats']\n","2025-05-27 01:48:06 [scrapy.middleware] INFO: Enabled extensions:\n","['scrapy.extensions.corestats.CoreStats',\n"," 'scrapy.extensions.telnet.TelnetConsole',\n"," 'scrapy.extensions.memusage.MemoryUsage',\n"," 'scrapy.extensions.logstats.LogStats']\n","INFO:scrapy.crawler:Overridden settings:\n","{'DOWNLOAD_DELAY': 1,\n"," 'ROBOTSTXT_OBEY': True,\n"," 'USER_AGENT': 'MyBot (example@example.com)'}\n","2025-05-27 01:48:06 [scrapy.crawler] INFO: Overridden settings:\n","{'DOWNLOAD_DELAY': 1,\n"," 'ROBOTSTXT_OBEY': True,\n"," 'USER_AGENT': 'MyBot (example@example.com)'}\n","INFO:scrapy.middleware:Enabled downloader middlewares:\n","['scrapy.downloadermiddlewares.offsite.OffsiteMiddleware',\n"," 'scrapy.downloadermiddlewares.robotstxt.RobotsTxtMiddleware',\n"," 'scrapy.downloadermiddlewares.httpauth.HttpAuthMiddleware',\n"," 'scrapy.downloadermiddlewares.downloadtimeout.DownloadTimeoutMiddleware',\n"," 'scrapy.downloadermiddlewares.defaultheaders.DefaultHeadersMiddleware',\n"," 'scrapy.downloadermiddlewares.useragent.UserAgentMiddleware',\n"," 'scrapy.downloadermiddlewares.retry.RetryMiddleware',\n"," 'scrapy.downloadermiddlewares.redirect.MetaRefreshMiddleware',\n"," 'scrapy.downloadermiddlewares.httpcompression.HttpCompressionMiddleware',\n"," 'scrapy.downloadermiddlewares.redirect.RedirectMiddleware',\n"," 'scrapy.downloadermiddlewares.cookies.CookiesMiddleware',\n"," 'scrapy.downloadermiddlewares.httpproxy.HttpProxyMiddleware',\n"," 'scrapy.downloadermiddlewares.stats.DownloaderStats']\n","2025-05-27 01:48:07 [scrapy.middleware] INFO: Enabled downloader middlewares:\n","['scrapy.downloadermiddlewares.offsite.OffsiteMiddleware',\n"," 'scrapy.downloadermiddlewares.robotstxt.RobotsTxtMiddleware',\n"," 'scrapy.downloadermiddlewares.httpauth.HttpAuthMiddleware',\n"," 'scrapy.downloadermiddlewares.downloadtimeout.DownloadTimeoutMiddleware',\n"," 'scrapy.downloadermiddlewares.defaultheaders.DefaultHeadersMiddleware',\n"," 'scrapy.downloadermiddlewares.useragent.UserAgentMiddleware',\n"," 'scrapy.downloadermiddlewares.retry.RetryMiddleware',\n"," 'scrapy.downloadermiddlewares.redirect.MetaRefreshMiddleware',\n"," 'scrapy.downloadermiddlewares.httpcompression.HttpCompressionMiddleware',\n"," 'scrapy.downloadermiddlewares.redirect.RedirectMiddleware',\n"," 'scrapy.downloadermiddlewares.cookies.CookiesMiddleware',\n"," 'scrapy.downloadermiddlewares.httpproxy.HttpProxyMiddleware',\n"," 'scrapy.downloadermiddlewares.stats.DownloaderStats']\n","INFO:scrapy.middleware:Enabled spider middlewares:\n","['scrapy.spidermiddlewares.start.StartSpiderMiddleware',\n"," 'scrapy.spidermiddlewares.httperror.HttpErrorMiddleware',\n"," 'scrapy.spidermiddlewares.referer.RefererMiddleware',\n"," 'scrapy.spidermiddlewares.urllength.UrlLengthMiddleware',\n"," 'scrapy.spidermiddlewares.depth.DepthMiddleware']\n","2025-05-27 01:48:07 [scrapy.middleware] INFO: Enabled spider middlewares:\n","['scrapy.spidermiddlewares.start.StartSpiderMiddleware',\n"," 'scrapy.spidermiddlewares.httperror.HttpErrorMiddleware',\n"," 'scrapy.spidermiddlewares.referer.RefererMiddleware',\n"," 'scrapy.spidermiddlewares.urllength.UrlLengthMiddleware',\n"," 'scrapy.spidermiddlewares.depth.DepthMiddleware']\n","INFO:scrapy.middleware:Enabled item pipelines:\n","[]\n","2025-05-27 01:48:07 [scrapy.middleware] INFO: Enabled item pipelines:\n","[]\n","INFO:scrapy.core.engine:Spider opened\n","2025-05-27 01:48:07 [scrapy.core.engine] INFO: Spider opened\n","INFO:scrapy.extensions.logstats:Crawled 0 pages (at 0 pages/min), scraped 0 items (at 0 items/min)\n","2025-05-27 01:48:07 [scrapy.extensions.logstats] INFO: Crawled 0 pages (at 0 pages/min), scraped 0 items (at 0 items/min)\n","INFO:scrapy.extensions.telnet:Telnet console listening on 127.0.0.1:6023\n","2025-05-27 01:48:07 [scrapy.extensions.telnet] INFO: Telnet console listening on 127.0.0.1:6023\n","DEBUG:scrapy.core.engine:Crawled (200) <GET https://ru.wikipedia.org/robots.txt> (referer: None)\n","2025-05-27 01:48:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://ru.wikipedia.org/robots.txt> (referer: None)\n","DEBUG:scrapy.core.engine:Crawled (200) <GET https://ru.wikipedia.org/wiki/%D0%98%D0%BD%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%86%D0%B8%D0%BE%D0%BD%D0%BD%D0%B0%D1%8F_%D0%B1%D0%B5%D0%B7%D0%BE%D0%BF%D0%B0%D1%81%D0%BD%D0%BE%D1%81%D1%82%D1%8C> (referer: None)\n","2025-05-27 01:48:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://ru.wikipedia.org/wiki/%D0%98%D0%BD%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%86%D0%B8%D0%BE%D0%BD%D0%BD%D0%B0%D1%8F_%D0%B1%D0%B5%D0%B7%D0%BE%D0%BF%D0%B0%D1%81%D0%BD%D0%BE%D1%81%D1%82%D1%8C> (referer: None)\n","INFO:scrapy.core.engine:Closing spider (finished)\n","2025-05-27 01:48:11 [scrapy.core.engine] INFO: Closing spider (finished)\n","INFO:scrapy.statscollectors:Dumping Scrapy stats:\n","{'downloader/request_bytes': 812,\n"," 'downloader/request_count': 2,\n"," 'downloader/request_method_count/GET': 2,\n"," 'downloader/response_bytes': 80814,\n"," 'downloader/response_count': 2,\n"," 'downloader/response_status_count/200': 2,\n"," 'elapsed_time_seconds': 3.380471,\n"," 'finish_reason': 'finished',\n"," 'finish_time': datetime.datetime(2025, 5, 27, 1, 48, 11, 155745, tzinfo=datetime.timezone.utc),\n"," 'httpcompression/response_bytes': 390267,\n"," 'httpcompression/response_count': 2,\n"," 'items_per_minute': 0.0,\n"," 'log_count/DEBUG': 4,\n"," 'log_count/INFO': 10,\n"," 'memusage/max': 307068928,\n"," 'memusage/startup': 307068928,\n"," 'response_received_count': 2,\n"," 'responses_per_minute': 40.0,\n"," 'robotstxt/request_count': 1,\n"," 'robotstxt/response_count': 1,\n"," 'robotstxt/response_status_count/200': 1,\n"," 'scheduler/dequeued': 1,\n"," 'scheduler/dequeued/memory': 1,\n"," 'scheduler/enqueued': 1,\n"," 'scheduler/enqueued/memory': 1,\n"," 'start_time': datetime.datetime(2025, 5, 27, 1, 48, 7, 775274, tzinfo=datetime.timezone.utc)}\n","2025-05-27 01:48:11 [scrapy.statscollectors] INFO: Dumping Scrapy stats:\n","{'downloader/request_bytes': 812,\n"," 'downloader/request_count': 2,\n"," 'downloader/request_method_count/GET': 2,\n"," 'downloader/response_bytes': 80814,\n"," 'downloader/response_count': 2,\n"," 'downloader/response_status_count/200': 2,\n"," 'elapsed_time_seconds': 3.380471,\n"," 'finish_reason': 'finished',\n"," 'finish_time': datetime.datetime(2025, 5, 27, 1, 48, 11, 155745, tzinfo=datetime.timezone.utc),\n"," 'httpcompression/response_bytes': 390267,\n"," 'httpcompression/response_count': 2,\n"," 'items_per_minute': 0.0,\n"," 'log_count/DEBUG': 4,\n"," 'log_count/INFO': 10,\n"," 'memusage/max': 307068928,\n"," 'memusage/startup': 307068928,\n"," 'response_received_count': 2,\n"," 'responses_per_minute': 40.0,\n"," 'robotstxt/request_count': 1,\n"," 'robotstxt/response_count': 1,\n"," 'robotstxt/response_status_count/200': 1,\n"," 'scheduler/dequeued': 1,\n"," 'scheduler/dequeued/memory': 1,\n"," 'scheduler/enqueued': 1,\n"," 'scheduler/enqueued/memory': 1,\n"," 'start_time': datetime.datetime(2025, 5, 27, 1, 48, 7, 775274, tzinfo=datetime.timezone.utc)}\n","INFO:scrapy.core.engine:Spider closed (finished)\n","2025-05-27 01:48:11 [scrapy.core.engine] INFO: Spider closed (finished)\n"]},{"output_type":"stream","name":"stdout","text":["Датасет сохранён в word_frequencies.csv\n"]}]},{"cell_type":"code","source":["df = pd.read_csv('word_frequencies.csv')\n","\n","# Получение топ-10 лемм\n","top_10 = df[['Lemma', 'Frequency']].head(10).values.tolist()\n","df.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"cg-tCDu-ZjHn","executionInfo":{"status":"ok","timestamp":1748310592580,"user_tz":-180,"elapsed":19,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}},"outputId":"65ef24dd-49a5-4a03-ff25-1152419ed4f3"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Lemma  Frequency\n","0    безопасность         71\n","1      информация         60\n","2  информационный         52\n","3     организация         39\n","4          защита         39\n","5         который         37\n","6             год         28\n","7         система         24\n","8         должный         18\n","9          данный         18"],"text/html":["\n","  <div id=\"df-8d6cf2e8-3858-4b9b-add2-80a74a9a1f8d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Lemma</th>\n","      <th>Frequency</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>безопасность</td>\n","      <td>71</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>информация</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>информационный</td>\n","      <td>52</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>организация</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>защита</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>который</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>год</td>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>система</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>должный</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>данный</td>\n","      <td>18</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","      \n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8d6cf2e8-3858-4b9b-add2-80a74a9a1f8d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","      \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","    \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8d6cf2e8-3858-4b9b-add2-80a74a9a1f8d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8d6cf2e8-3858-4b9b-add2-80a74a9a1f8d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","  \n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["# Визуализация\n","lemmas, frequencies = zip(*top_10)\n","plt.figure(figsize=(10, 6))\n","plt.bar(lemmas, frequencies, color='skyblue')\n","plt.xlabel('Леммы')\n","plt.ylabel('Частота')\n","plt.title('Топ-10 часто встречаемых лемм')\n","plt.xticks(rotation=45)\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":607},"id":"r7grXwPaRp95","executionInfo":{"status":"ok","timestamp":1748310594186,"user_tz":-180,"elapsed":251,"user":{"displayName":"ForeverPepe","userId":"04807355741031440951"}},"outputId":"5189c2f5-ec69-4304-e828-0b1436f4fbc2"},"execution_count":10,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}
